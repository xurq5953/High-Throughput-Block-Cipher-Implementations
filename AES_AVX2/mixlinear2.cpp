//
// Created by Axurq on 21/5/2022.
//
#include <x86intrin.h>
#include <cstdint>


void mixlinear2(__m256i *b0, __m256i *b1, __m256i *b2, __m256i *b3, __m256i *y, uint32_t key) {
    __m256i x[32];

    x[23] = b2[7] ^ b3[7];
    x[31] = b3[7] ^ b1[7];
    x[12] = b1[4] ^ b0[4];
    x[13] = b1[5] ^ b2[5];
    x[17] = b2[1] ^ b1[1];
    x[11] = b1[3] ^ b3[3];
    x[4] = b0[4] ^ b3[4];
    x[21] = b2[5] ^ b0[5];
    x[0] = b0[0] ^ b3[0];
    x[15] = b1[7] ^ b0[7];
    x[9] = b1[1] ^ b0[1];
    x[14] = b1[6] ^ b0[6];
    x[24] = b3[0] ^ b2[0];
    x[6] = b0[6] ^ b2[6];
    x[16] = b2[0] ^ x[31];
    x[24] = x[24] ^ b1[0];
    x[18] = b2[2] ^ b3[2];
    x[22] = b2[6] ^ b3[6];
    x[26] = b3[2] ^ b1[2];
    x[8] = b1[0] ^ x[23];
    x[30] = b3[6] ^ x[13];
    x[13] = x[13] ^ b3[5];
    x[5] = b0[5] ^ x[13];
    x[29] = b3[5] ^ x[4];
    x[4] = x[4] ^ x[11];
    x[11] = x[11] ^ b2[3];
    x[13] = x[13] ^ x[12];
    x[19] = b2[3] ^ x[23];
    x[4] = x[4] ^ x[31];
    x[12] = x[12] ^ b2[4];
    x[28] = b3[4] ^ x[12];
    x[20] = b2[4] ^ b3[3] ^ x[19];
    x[27] = b3[3] ^ x[31];
    x[12] = x[12] ^ x[15];
    x[27] = x[27] ^ b0[3];
    x[3] = b0[3] ^ x[11];
    x[11] = x[11] ^ b0[2];
    x[19] = x[19] ^ x[18];
    x[11] = x[11] ^ b1[2];
    y[2] = b1[2] ^ x[18] ^ x[9] ^ _mm256_set1_epi32(-((key >> 2) & 1));
    x[18] = x[18] ^ b0[2];
    x[2] = b0[2] ^ x[9];
    x[18] = x[18] ^ x[17];
    x[17] = x[17] ^ b3[1];
    x[1] = b0[1] ^ x[17];
    x[25] = b3[1] ^ x[24];
    x[9] = x[9] ^ x[8];
    x[24] = x[24] ^ x[15];
    x[11] = x[11] ^ x[15];
    y[16] = x[8] ^ x[0] ^ _mm256_set1_epi32(-((key >> 16) & 1));
    x[15] = x[15] ^ x[23];
    x[17] = x[17] ^ x[16];
    x[16] = x[16] ^ x[0];
    x[0] = x[0] ^ x[31];
    y[8] = x[16] ^ x[23] ^ _mm256_set1_epi32(-((key >> 8) & 1));
    x[23] = x[23] ^ x[6];
    x[31] = x[31] ^ b0[7] ^ x[22];
    x[30] = x[30] ^ x[6];
    x[7] = b0[7] ^ x[14];
    x[14] = x[14] ^ x[21];
    x[22] = x[22] ^ x[21];
    x[6] = x[6] ^ x[5];
    y[29] = x[5] ^ x[29] ^ _mm256_set1_epi32(-((key >> 29) & 1));
    x[21] = x[21] ^ x[28];
    y[13] = x[29] ^ x[21] ^ _mm256_set1_epi32(-((key >> 13) & 1));
    y[21] = x[21] ^ x[13] ^ _mm256_set1_epi32(-((key >> 21) & 1));
    x[12] = x[12] ^ x[27];
    x[27] = x[27] ^ x[26];
    y[20] = x[28] ^ x[20] ^ _mm256_set1_epi32(-((key >> 20) & 1));
    y[12] = x[20] ^ x[4] ^ _mm256_set1_epi32(-((key >> 12) & 1));
    x[26] = x[26] ^ x[1];
    x[14] = x[14] ^ x[30];
    y[4] = x[4] ^ x[12] ^ _mm256_set1_epi32(-((key >> 4) & 1));
    y[19] = x[3] ^ x[19] ^ _mm256_set1_epi32(-((key >> 19) & 1));
    y[11] = x[19] ^ x[27] ^ _mm256_set1_epi32(-((key >> 11) & 1));
    x[0] = x[0] ^ x[24];
    y[25] = x[1] ^ x[25] ^ x[0] ^ _mm256_set1_epi32(-((key >> 25) & 1));
    y[18] = x[2] ^ x[26] ^ _mm256_set1_epi32(-((key >> 18) & 1));
    y[17] = x[25] ^ x[9] ^ _mm256_set1_epi32(-((key >> 17) & 1));
    y[7] = x[15] ^ x[7] ^ _mm256_set1_epi32(-((key >> 7) & 1));
    y[15] = x[7] ^ x[23] ^ _mm256_set1_epi32(-((key >> 15) & 1));
    y[9] = x[9] ^ x[17] ^ _mm256_set1_epi32(-((key >> 9) & 1));
    y[31] = x[23] ^ x[31] ^ _mm256_set1_epi32(-((key >> 31) & 1));
    y[26] = x[26] ^ x[18] ^ _mm256_set1_epi32(-((key >> 26) & 1));
    x[6] = x[6] ^ x[14];
    y[30] = x[22] ^ x[6] ^ _mm256_set1_epi32(-((key >> 30) & 1));
    y[1] = x[17] ^ x[0] ^ _mm256_set1_epi32(-((key >> 1) & 1));
    y[27] = x[27] ^ x[11] ^ _mm256_set1_epi32(-((key >> 27) & 1));

    y[5] = x[13] ^ _mm256_set1_epi32(-((key >> 5) & 1));
    y[10] = x[18] ^ _mm256_set1_epi32(-((key >> 10) & 1));
    y[0] = x[24] ^ _mm256_set1_epi32(-((key >> 0) & 1));
    y[3] = x[11] ^ _mm256_set1_epi32(-((key >> 3) & 1));
    y[23] = x[31] ^ _mm256_set1_epi32(-((key >> 23) & 1));
    y[14] = x[30] ^ _mm256_set1_epi32(-((key >> 14) & 1));
    y[28] = x[12] ^ _mm256_set1_epi32(-((key >> 28) & 1));
    y[6] = x[14] ^ _mm256_set1_epi32(-((key >> 6) & 1));
    y[24] = x[0] ^ _mm256_set1_epi32(-((key >> 24) & 1));
    y[22] = x[6] ^ _mm256_set1_epi32(-((key >> 22) & 1));


}